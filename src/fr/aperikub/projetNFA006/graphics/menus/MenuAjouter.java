/*
 * Nom de classe : MenuAjouter
 *
 * Description   : Pilote le menu permettant d'ajouter des utilisateurs.
 *
 * Auteurs       : Steven Besnard, Agnes Laurencon, Olivier Baylac, Benjamin Launay.
 *
 * Version       : 1.0
 *
 * Date          : 09/01/2022
 *
 * Copyright     : CC-BY-SA
 */

package fr.aperikub.projetNFA006.graphics.menus;




import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.time.LocalDate;
import java.util.Locale;

public class MenuAjouter {
    private JPanel menuAjouterPanel;
    private JLabel menuAjouterTitle;
    private JTextField titreField;
    private JButton validerButton;
    private JLabel titreLabel;
    private JTextField prixField;
    private JLabel prixLabel;
    private JTextField dateParutionField;
    private JLabel dateLabel;
    private JComboBox categorieBox;

    private JTextField isbnField;
    private JLabel isbnLabel;

    private JTextField quantityField;
    private JLabel quantityLabel;
    private JComboBox dayComboBox;
    private JComboBox monthComboBox;
    private JComboBox yearComboBox;


    public MenuAjouter() {

        /*
         * listener du choix du type d'utilisateur ajoutÃ©
         */


        /*
         * listener du bouton valider
         */
        validerButton.addActionListener(e -> {
            try {


            } catch (Exception ex) {
                JOptionPane.showMessageDialog(menuAjouterPanel, ex.getMessage(), "erreur", JOptionPane.ERROR_MESSAGE);
            }
        });
    }

    /*
     * place des indices dans les zones de saisie
     */


    public JPanel getMenuAjouterPanel() {
        return menuAjouterPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        menuAjouterPanel = new JPanel();
        menuAjouterPanel.setLayout(new GridLayoutManager(12, 10, new Insets(0, 0, 0, 0), -1, -1));
        menuAjouterPanel.setPreferredSize(new Dimension(700, 500));
        menuAjouterTitle = new JLabel();
        Font menuAjouterTitleFont = this.$$$getFont$$$("Comic Sans MS", -1, 36, menuAjouterTitle.getFont());
        if (menuAjouterTitleFont != null) menuAjouterTitle.setFont(menuAjouterTitleFont);
        menuAjouterTitle.setText("Ajouter un livre");
        menuAjouterPanel.add(menuAjouterTitle, new GridConstraints(0, 0, 1, 10, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        menuAjouterPanel.add(spacer1, new GridConstraints(11, 8, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        titreField = new JTextField();
        menuAjouterPanel.add(titreField, new GridConstraints(4, 3, 1, 6, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer2 = new Spacer();
        menuAjouterPanel.add(spacer2, new GridConstraints(4, 9, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        menuAjouterPanel.add(spacer3, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        menuAjouterPanel.add(spacer4, new GridConstraints(1, 7, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        menuAjouterPanel.add(spacer5, new GridConstraints(5, 7, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        titreLabel = new JLabel();
        titreLabel.setText("Titre");
        menuAjouterPanel.add(titreLabel, new GridConstraints(4, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dateLabel = new JLabel();
        dateLabel.setInheritsPopupMenu(true);
        dateLabel.setText("Date de parution");
        menuAjouterPanel.add(dateLabel, new GridConstraints(6, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        isbnField = new JTextField();
        menuAjouterPanel.add(isbnField, new GridConstraints(2, 3, 1, 6, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        isbnLabel = new JLabel();
        isbnLabel.setText("ISBN");
        menuAjouterPanel.add(isbnLabel, new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        menuAjouterPanel.add(spacer6, new GridConstraints(3, 7, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer7 = new Spacer();
        menuAjouterPanel.add(spacer7, new GridConstraints(7, 7, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        prixLabel = new JLabel();
        prixLabel.setText("Price");
        menuAjouterPanel.add(prixLabel, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer8 = new Spacer();
        menuAjouterPanel.add(spacer8, new GridConstraints(8, 5, 1, 5, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        categorieBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("fiction");
        defaultComboBoxModel1.addElement("documentaire");
        defaultComboBoxModel1.addElement("bande_dessinee");
        defaultComboBoxModel1.addElement("technique");
        defaultComboBoxModel1.addElement("biographique");
        defaultComboBoxModel1.addElement("jeunesse");
        categorieBox.setModel(defaultComboBoxModel1);
        menuAjouterPanel.add(categorieBox, new GridConstraints(10, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer9 = new Spacer();
        menuAjouterPanel.add(spacer9, new GridConstraints(9, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        prixField = new JTextField();
        menuAjouterPanel.add(prixField, new GridConstraints(8, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(138, 30), null, 0, false));
        quantityLabel = new JLabel();
        quantityLabel.setText("Quantity available");
        menuAjouterPanel.add(quantityLabel, new GridConstraints(8, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dayComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel2 = new DefaultComboBoxModel();
        defaultComboBoxModel2.addElement("1");
        defaultComboBoxModel2.addElement("2");
        defaultComboBoxModel2.addElement("3");
        defaultComboBoxModel2.addElement("4");
        defaultComboBoxModel2.addElement("5");
        defaultComboBoxModel2.addElement("6");
        defaultComboBoxModel2.addElement("7");
        defaultComboBoxModel2.addElement("8");
        defaultComboBoxModel2.addElement("9");
        defaultComboBoxModel2.addElement("10");
        defaultComboBoxModel2.addElement("11");
        defaultComboBoxModel2.addElement("12");
        defaultComboBoxModel2.addElement("13");
        defaultComboBoxModel2.addElement("14");
        defaultComboBoxModel2.addElement("15");
        defaultComboBoxModel2.addElement("16");
        defaultComboBoxModel2.addElement("17");
        defaultComboBoxModel2.addElement("18");
        defaultComboBoxModel2.addElement("19");
        defaultComboBoxModel2.addElement("20");
        defaultComboBoxModel2.addElement("21");
        defaultComboBoxModel2.addElement("22");
        defaultComboBoxModel2.addElement("23");
        defaultComboBoxModel2.addElement("24");
        defaultComboBoxModel2.addElement("25");
        defaultComboBoxModel2.addElement("26");
        defaultComboBoxModel2.addElement("27");
        defaultComboBoxModel2.addElement("28");
        defaultComboBoxModel2.addElement("29");
        defaultComboBoxModel2.addElement("30");
        defaultComboBoxModel2.addElement("31");
        dayComboBox.setModel(defaultComboBoxModel2);
        menuAjouterPanel.add(dayComboBox, new GridConstraints(6, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, -1), null, 0, false));
        monthComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel3 = new DefaultComboBoxModel();
        defaultComboBoxModel3.addElement("1");
        defaultComboBoxModel3.addElement("2");
        defaultComboBoxModel3.addElement("3");
        defaultComboBoxModel3.addElement("4");
        defaultComboBoxModel3.addElement("5");
        defaultComboBoxModel3.addElement("6");
        defaultComboBoxModel3.addElement("7");
        defaultComboBoxModel3.addElement("8");
        defaultComboBoxModel3.addElement("9");
        defaultComboBoxModel3.addElement("10");
        defaultComboBoxModel3.addElement("11");
        defaultComboBoxModel3.addElement("12");
        monthComboBox.setModel(defaultComboBoxModel3);
        menuAjouterPanel.add(monthComboBox, new GridConstraints(6, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, -1), null, 0, false));
        yearComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel4 = new DefaultComboBoxModel();
        defaultComboBoxModel4.addElement("1900");
        defaultComboBoxModel4.addElement("1901");
        defaultComboBoxModel4.addElement("1902");
        defaultComboBoxModel4.addElement("1903");
        defaultComboBoxModel4.addElement("1904");
        defaultComboBoxModel4.addElement("1905");
        defaultComboBoxModel4.addElement("1906");
        defaultComboBoxModel4.addElement("1907");
        defaultComboBoxModel4.addElement("1908");
        defaultComboBoxModel4.addElement("1909");
        defaultComboBoxModel4.addElement("1910");
        defaultComboBoxModel4.addElement("1911");
        defaultComboBoxModel4.addElement("1912");
        defaultComboBoxModel4.addElement("1913");
        defaultComboBoxModel4.addElement("1914");
        defaultComboBoxModel4.addElement("1915");
        defaultComboBoxModel4.addElement("1916");
        defaultComboBoxModel4.addElement("1917");
        defaultComboBoxModel4.addElement("1918");
        defaultComboBoxModel4.addElement("1919");
        defaultComboBoxModel4.addElement("1920");
        defaultComboBoxModel4.addElement("1921");
        defaultComboBoxModel4.addElement("1922");
        defaultComboBoxModel4.addElement("1923");
        defaultComboBoxModel4.addElement("1924");
        defaultComboBoxModel4.addElement("1925");
        defaultComboBoxModel4.addElement("1926");
        defaultComboBoxModel4.addElement("1927");
        defaultComboBoxModel4.addElement("1928");
        defaultComboBoxModel4.addElement("1929");
        defaultComboBoxModel4.addElement("1930");
        defaultComboBoxModel4.addElement("1931");
        defaultComboBoxModel4.addElement("1932");
        defaultComboBoxModel4.addElement("1933");
        defaultComboBoxModel4.addElement("1934");
        defaultComboBoxModel4.addElement("1935");
        defaultComboBoxModel4.addElement("1936");
        defaultComboBoxModel4.addElement("1937");
        defaultComboBoxModel4.addElement("1938");
        defaultComboBoxModel4.addElement("1939");
        defaultComboBoxModel4.addElement("1940");
        defaultComboBoxModel4.addElement("1941");
        defaultComboBoxModel4.addElement("1942");
        defaultComboBoxModel4.addElement("1943");
        defaultComboBoxModel4.addElement("1944");
        defaultComboBoxModel4.addElement("1945");
        defaultComboBoxModel4.addElement("1946");
        defaultComboBoxModel4.addElement("1947");
        defaultComboBoxModel4.addElement("1948");
        defaultComboBoxModel4.addElement("1949");
        defaultComboBoxModel4.addElement("1950");
        defaultComboBoxModel4.addElement("1951");
        defaultComboBoxModel4.addElement("1952");
        defaultComboBoxModel4.addElement("1953");
        defaultComboBoxModel4.addElement("1954");
        defaultComboBoxModel4.addElement("1955");
        defaultComboBoxModel4.addElement("1956");
        defaultComboBoxModel4.addElement("1957");
        defaultComboBoxModel4.addElement("1958");
        defaultComboBoxModel4.addElement("1959");
        defaultComboBoxModel4.addElement("1960");
        defaultComboBoxModel4.addElement("1961");
        defaultComboBoxModel4.addElement("1962");
        defaultComboBoxModel4.addElement("1963");
        defaultComboBoxModel4.addElement("1964");
        defaultComboBoxModel4.addElement("1965");
        defaultComboBoxModel4.addElement("1966");
        defaultComboBoxModel4.addElement("1967");
        defaultComboBoxModel4.addElement("1968");
        defaultComboBoxModel4.addElement("1969");
        defaultComboBoxModel4.addElement("1970");
        defaultComboBoxModel4.addElement("1971");
        defaultComboBoxModel4.addElement("1972");
        defaultComboBoxModel4.addElement("1973");
        defaultComboBoxModel4.addElement("1974");
        defaultComboBoxModel4.addElement("1975");
        defaultComboBoxModel4.addElement("1976");
        defaultComboBoxModel4.addElement("1977");
        defaultComboBoxModel4.addElement("1978");
        defaultComboBoxModel4.addElement("1979");
        defaultComboBoxModel4.addElement("1980");
        defaultComboBoxModel4.addElement("1981");
        defaultComboBoxModel4.addElement("1982");
        defaultComboBoxModel4.addElement("1983");
        defaultComboBoxModel4.addElement("1984");
        defaultComboBoxModel4.addElement("1985");
        defaultComboBoxModel4.addElement("1986");
        defaultComboBoxModel4.addElement("1987");
        defaultComboBoxModel4.addElement("1988");
        defaultComboBoxModel4.addElement("1989");
        defaultComboBoxModel4.addElement("1990");
        defaultComboBoxModel4.addElement("1991");
        defaultComboBoxModel4.addElement("1992");
        defaultComboBoxModel4.addElement("1993");
        defaultComboBoxModel4.addElement("1994");
        defaultComboBoxModel4.addElement("1995");
        defaultComboBoxModel4.addElement("1996");
        defaultComboBoxModel4.addElement("1997");
        defaultComboBoxModel4.addElement("1998");
        defaultComboBoxModel4.addElement("1999");
        defaultComboBoxModel4.addElement("2000");
        defaultComboBoxModel4.addElement("2001");
        defaultComboBoxModel4.addElement("2002");
        defaultComboBoxModel4.addElement("2003");
        defaultComboBoxModel4.addElement("2004");
        defaultComboBoxModel4.addElement("2005");
        defaultComboBoxModel4.addElement("2006");
        defaultComboBoxModel4.addElement("2007");
        defaultComboBoxModel4.addElement("2008");
        defaultComboBoxModel4.addElement("2009");
        defaultComboBoxModel4.addElement("2010");
        defaultComboBoxModel4.addElement("2011");
        defaultComboBoxModel4.addElement("2012");
        defaultComboBoxModel4.addElement("2013");
        defaultComboBoxModel4.addElement("2014");
        defaultComboBoxModel4.addElement("2015");
        defaultComboBoxModel4.addElement("2016");
        defaultComboBoxModel4.addElement("2017");
        defaultComboBoxModel4.addElement("2018");
        defaultComboBoxModel4.addElement("2019");
        defaultComboBoxModel4.addElement("2020");
        defaultComboBoxModel4.addElement("2021");
        defaultComboBoxModel4.addElement("2022");
        yearComboBox.setModel(defaultComboBoxModel4);
        menuAjouterPanel.add(yearComboBox, new GridConstraints(6, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, -1), null, 0, false));
        quantityField = new JTextField();
        menuAjouterPanel.add(quantityField, new GridConstraints(8, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, -1), null, 0, false));
        validerButton = new JButton();
        validerButton.setText("Ajouter");
        menuAjouterPanel.add(validerButton, new GridConstraints(10, 5, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return menuAjouterPanel;
    }
}
